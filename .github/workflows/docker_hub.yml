name: docker_hub

on:
  push:
    branches: [ master ]
  # pull_request:
  #   branches: "*"


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: julienc/api-inference-audio
          tag-sha: true
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push (allennlp)
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: allennlp
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Build and push (asteroid)
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: asteroid
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push (flair)
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: flair
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Build and push (espnet)
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: espnet
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Build and push (speechbrain)
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: speechbrain
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Build and push (timm)
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: timm
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
